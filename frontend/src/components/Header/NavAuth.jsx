import React, {useEffect} from 'react';
import s from './Header.module.css';
import {useDispatch} from 'react-redux';
import {useAuth} from '../../hooks/use-auth';
import {getUserName, removeUser} from '../../store/slices/userSlice';
import { useNavigate } from 'react-router-dom';

const NavAuth = () => {
    let navigate = useNavigate();
    const dispatch = useDispatch();

    const user = useAuth();

    useEffect(() => {
        if(user.id)
            dispatch(getUserName(user.id));
    }, []);

    const logout = () => {
        debugger
        dispatch(removeUser());
        navigate("/");
    };

    if (user.isAuth) {
        return (
            <div className={s.nav_auth}>
                {
                    user.role === "mainboss" ?
                        <div className={s.gear} onClick={() => navigate("/blocks")}>
                            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M9.99939 5.94141C9.46656 5.94141 8.93894 6.04636 8.44666 6.25027C7.95438 6.45417 7.50708 6.75305 7.13031 7.12982C6.75354 7.50659 6.45466 7.95389 6.25075 8.44617C6.04685 8.93845 5.94189 9.46607 5.94189 9.99891C5.94189 10.5317 6.04685 11.0594 6.25075 11.5516C6.45466 12.0439 6.75354 12.4912 7.13031 12.868C7.50708 13.2448 7.95438 13.5436 8.44666 13.7475C8.93894 13.9515 9.46656 14.0564 9.99939 14.0564C11.0755 14.0564 12.1076 13.6289 12.8685 12.868C13.6294 12.1071 14.0569 11.075 14.0569 9.99891C14.0569 8.92279 13.6294 7.89075 12.8685 7.12982C12.1076 6.36889 11.0755 5.94141 9.99939 5.94141ZM7.1919 9.99891C7.1919 9.25431 7.48768 8.54021 8.01419 8.0137C8.5407 7.4872 9.2548 7.19141 9.99939 7.19141C10.744 7.19141 11.4581 7.4872 11.9846 8.0137C12.5111 8.54021 12.8069 9.25431 12.8069 9.99891C12.8069 10.7435 12.5111 11.4576 11.9846 11.9841C11.4581 12.5106 10.744 12.8064 9.99939 12.8064C9.2548 12.8064 8.5407 12.5106 8.01419 11.9841C7.48768 11.4576 7.1919 10.7435 7.1919 9.99891Z" fill="black"/>
                                <path d="M12.2444 1.67812C11.5856 -0.559375 8.41313 -0.559375 7.75437 1.67812L7.63688 2.07687C7.59087 2.23307 7.5105 2.37698 7.40165 2.49807C7.29279 2.61916 7.15823 2.71436 7.0078 2.77669C6.85738 2.83902 6.69491 2.86689 6.53232 2.85827C6.36972 2.84965 6.21112 2.80476 6.06812 2.72687L5.70312 2.52688C3.65313 1.41188 1.41188 3.65437 2.52813 5.70312L2.72687 6.06812C2.80476 6.21112 2.84965 6.36972 2.85827 6.53232C2.86689 6.69491 2.83902 6.85738 2.77669 7.0078C2.71436 7.15823 2.61916 7.29279 2.49807 7.40165C2.37698 7.5105 2.23307 7.59087 2.07687 7.63688L1.67812 7.75437C-0.559375 8.41313 -0.559375 11.5856 1.67812 12.2444L2.07687 12.3619C2.23307 12.4079 2.37698 12.4883 2.49807 12.5971C2.61916 12.706 2.71436 12.8405 2.77669 12.9909C2.83902 13.1414 2.86689 13.3038 2.85827 13.4664C2.84965 13.629 2.80476 13.7876 2.72687 13.9306L2.52688 14.2956C1.41188 16.3456 3.65313 18.5881 5.70312 17.4706L6.06812 17.2719C6.21112 17.194 6.36972 17.1491 6.53232 17.1405C6.69491 17.1319 6.85738 17.1597 7.0078 17.2221C7.15823 17.2844 7.29279 17.3796 7.40165 17.5007C7.5105 17.6218 7.59087 17.7657 7.63688 17.9219L7.75437 18.3206C8.41313 20.5581 11.5856 20.5581 12.2444 18.3206L12.3619 17.9219C12.4079 17.7657 12.4883 17.6218 12.5971 17.5007C12.706 17.3796 12.8405 17.2844 12.9909 17.2221C13.1414 17.1597 13.3038 17.1319 13.4664 17.1405C13.629 17.1491 13.7876 17.194 13.9306 17.2719L14.2956 17.4719C16.3456 18.5881 18.5881 16.3444 17.4706 14.2956L17.2719 13.9306C17.194 13.7876 17.1491 13.629 17.1405 13.4664C17.1319 13.3038 17.1597 13.1414 17.2221 12.9909C17.2844 12.8405 17.3796 12.706 17.5007 12.5971C17.6218 12.4883 17.7657 12.4079 17.9219 12.3619L18.3206 12.2444C20.5581 11.5856 20.5581 8.41313 18.3206 7.75437L17.9219 7.63688C17.7657 7.59087 17.6218 7.5105 17.5007 7.40165C17.3796 7.29279 17.2844 7.15823 17.2221 7.0078C17.1597 6.85738 17.1319 6.69491 17.1405 6.53232C17.1491 6.36972 17.194 6.21112 17.2719 6.06812L17.4719 5.70312C18.5881 3.65313 16.3444 1.41188 14.2956 2.52813L13.9306 2.72687C13.7876 2.80476 13.629 2.84965 13.4664 2.85827C13.3038 2.86689 13.1414 2.83902 12.9909 2.77669C12.8405 2.71436 12.706 2.61916 12.5971 2.49807C12.4883 2.37698 12.4079 2.23307 12.3619 2.07687L12.2444 1.67812ZM8.95312 2.03187C9.26062 0.988125 10.7381 0.988125 11.0456 2.03187L11.1631 2.43062C11.2619 2.76573 11.4344 3.07448 11.668 3.33425C11.9016 3.59401 12.1904 3.7982 12.5132 3.93185C12.836 4.0655 13.1846 4.12521 13.5335 4.10661C13.8823 4.08802 14.2226 3.99158 14.5294 3.82437L14.8931 3.62437C15.8481 3.10562 16.8931 4.14937 16.3731 5.10562L16.1744 5.47062C16.0074 5.77741 15.9112 6.11766 15.8928 6.46644C15.8744 6.81523 15.9343 7.16371 16.0681 7.48636C16.2018 7.809 16.4061 8.09763 16.6658 8.33109C16.9256 8.56456 17.2343 8.73695 17.5694 8.83562L17.9669 8.95312C19.0106 9.26062 19.0106 10.7381 17.9669 11.0456L17.5681 11.1631C17.233 11.2619 16.9243 11.4344 16.6645 11.668C16.4047 11.9016 16.2005 12.1904 16.0669 12.5132C15.9333 12.836 15.8735 13.1846 15.8921 13.5335C15.9107 13.8823 16.0072 14.2226 16.1744 14.5294L16.3744 14.8931C16.8931 15.8481 15.8494 16.8931 14.8931 16.3731L14.5294 16.1744C14.2225 16.0072 13.8822 15.9108 13.5332 15.8923C13.1843 15.8738 12.8357 15.9336 12.5129 16.0674C12.19 16.2011 11.9013 16.4055 11.6677 16.6654C11.4342 16.9253 11.2618 17.2342 11.1631 17.5694L11.0456 17.9669C10.7381 19.0106 9.26062 19.0106 8.95312 17.9669L8.83562 17.5681C8.73681 17.2332 8.56432 16.9246 8.33079 16.665C8.09726 16.4053 7.80861 16.2012 7.48599 16.0676C7.16336 15.934 6.81493 15.8742 6.46621 15.8927C6.11749 15.9112 5.77733 16.0074 5.47062 16.1744L5.10562 16.3744C4.15062 16.8931 3.10562 15.8494 3.62562 14.8931L3.82437 14.5294C3.99181 14.2226 4.08844 13.8822 4.10716 13.5332C4.12588 13.1842 4.06622 12.8354 3.93255 12.5124C3.79889 12.1895 3.59462 11.9006 3.33472 11.6669C3.07483 11.4332 2.76591 11.2606 2.43062 11.1619L2.03187 11.0444C0.988125 10.7369 0.988125 9.25937 2.03187 8.95187L2.43062 8.83437C2.76538 8.73551 3.0738 8.56305 3.3333 8.32961C3.59281 8.09617 3.79683 7.80766 3.93044 7.48519C4.06405 7.16273 4.12387 6.81447 4.10552 6.4659C4.08717 6.11733 3.99111 5.77728 3.82437 5.47062L3.62437 5.10562C3.10562 4.15062 4.14937 3.10562 5.10562 3.62562L5.47062 3.82437C5.77733 3.99134 6.11749 4.08759 6.46621 4.10607C6.81493 4.12454 7.16336 4.06477 7.48599 3.93115C7.80861 3.79752 8.09726 3.59341 8.33079 3.33378C8.56432 3.07414 8.73681 2.76556 8.83562 2.43062L8.95312 2.03187Z" fill="black"/>
                            </svg>
                        </div> : <></>
                }

                <a className={s.nav_item1}>
                    {user.surname && user.name
                        ? `${user.surname} ${user.name}`
                        : 'Аноним'}
                </a>
                <span className={s.sep}/>
                <div className={s.nav_item} onClick={logout}>Выйти</div>
            </div>
        );
    }

    return (
        <div className={s.nav_auth}>
            {/*<Link to={"/login"}><a className={s.nav_item} >Войти</a></Link>*/}
            {/*<span className={s.sep}></span>*/}
            {/*<Link to={"/registration"}><a className={s.nav_item}>Зарегистрироваться</a></Link>*/}
        </div>
    );
};

export default NavAuth;
